{"version":3,"sources":["component/Notification.js","services/person.js","component/PersonForm.js","App.js","index.js"],"names":["Notification","notify","message","className","baseURL","getPersons","a","request","axios","get","response","data","postPerson","person","post","deletePerson","id","delete","putPerson","newPhonebook","put","PersonForm","setPersons","persons","setMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","name","number","existingPerson","find","undefined","window","confirm","personService","then","typedPerson","map","setTimeout","catch","error","concat","onChange","target","value","type","Persons","filterPersons","handleDelete","onClick","App","filter","setFilter","setFilterPersons","useEffect","toLowerCase","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9926b94.chunk.js","sourcesContent":["const Notification = ({notify}) => {\r\n    if (notify === null) {\r\n      return null\r\n    }\r\n    const {message , className} = notify\r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import axios from \"axios\";\r\nconst baseURL= '/api/persons';\r\n\r\n\r\nconst getPersons = async () => {\r\n  const request = axios.get(baseURL)\r\n  const response = await request\r\n return response.data\r\n}\r\n\r\nconst postPerson = async (person) => {\r\n const request = axios.post(baseURL,person)\r\n const response = await request\r\n return response.data\r\n}\r\n\r\nconst deletePerson = async (id) => {\r\n const request = axios.delete(`${baseURL}/${id}`)\r\n const response = await request\r\n return response.data\r\n}\r\n\r\nconst putPerson = async (newPhonebook,id) => {\r\n const request = axios.put(`${baseURL}/${id}`,newPhonebook)\r\n const response = await request\r\n return response.data\r\n}\r\n\r\nexport  {\r\n getPersons,\r\n postPerson,\r\n deletePerson,\r\n putPerson\r\n}","import React, { useState } from 'react'\r\nimport * as personService from '../services/person'\r\n\r\n\r\nconst PersonForm = ({setPersons, persons, setMessage}) => {\r\n\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    \r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n  \r\n      const newPhonebook = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      const existingPerson = persons.find((person) => person.name === newName)\r\n      \r\n      if( existingPerson !== undefined){\r\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n          personService\r\n          .putPerson(newPhonebook,existingPerson.id)\r\n          .then((typedPerson) => {\r\n            setPersons(persons.map(person => person.id === typedPerson.id ? typedPerson : person))\r\n            setMessage({message:`Updated ${typedPerson.name}`, className: 'success'})\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            },5000)\r\n          })\r\n          .catch((error) => {\r\n            setMessage({message: error.response.data.error,className: 'error'})\r\n            setTimeout(()=>{\r\n              setMessage(null)\r\n            },5000)\r\n          })\r\n        }\r\n      }\r\n      else{\r\n        personService\r\n        .postPerson(newPhonebook)\r\n        .then((typedPerson)=>{\r\n          setPersons(persons.concat(typedPerson))\r\n          setMessage({message:`${typedPerson.name} Added `, className: 'success'})\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          },5000)\r\n        })\r\n        .catch((error) => {\r\n          setMessage({message: error.response.data.error,className: 'error'})\r\n          setTimeout(()=>{\r\n            setMessage(null)\r\n          },5000)\r\n        })\r\n      }\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }\r\n  \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input \r\n                onChange={handleNameChange} \r\n                value={newName}\r\n                />\r\n        </div>\r\n        <div>\r\n          number: <input \r\n                onChange={handleNumberChange} \r\n                value={newNumber}\r\n                />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  \r\n  export default PersonForm;","import React, { useState, useEffect } from 'react'\nimport Notification from './component/Notification'\nimport * as personService from './services/person'\nimport PersonForm from './component/PersonForm'\n\n\n\nconst Persons = ({filterPersons,handleDelete}) => {\n    return filterPersons.map((person) => <p key={person.id}>{person.name} {person.number} \n    <button onClick={() => \n    handleDelete(person.id,person.name)}>delete</button>\n    </p>)\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ filter, setFilter ] = useState('')\n  const [ filterPersons, setFilterPersons] = useState(persons)\n  const [ message, setMessage ] = useState(null)\n\n  const handleFilterChange = (event) => {\n      setFilter(event.target.value)\n      setFilterPersons(persons.filter((person) => (\n       person.name.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1 )));\n  }\n\n  const handleDelete = (id,name) => {\n    if(window.confirm(`Delete ${name}`)){\n      personService\n      .deletePerson(id)\n      .then(()=>{\n        personService\n        .getPersons()\n        .then(persons => {\n          setPersons(persons)\n        })\n      })\n      .catch(error => {\n        setMessage({ message:`Information of ${name} has already been removed from server`, className: 'error'})\n        setTimeout(() => {\n          setMessage(null)\n        },5000)\n      })\n    }\n  }\n\n  useEffect(() => {\n      personService\n      .getPersons()\n      .then(persons => {\n        setPersons(persons)\n      })\n      \n  },[])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notify={message}/>\n      <div>\n          filter shown with <input onChange={handleFilterChange} value={filter}></input>\n      </div>\n      <h2>add a new</h2>\n      <PersonForm setPersons={setPersons} \n      setMessage={setMessage} persons={persons}/>\n      <h2>Numbers</h2>\n      {filter === '' ? <Persons handleDelete={handleDelete} filterPersons={persons}/> : <Persons handleDelete={handleDelete} filterPersons={filterPersons}/>}\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}